load '../../common/Configure.rb'
load '../Configuration.rb'

Vagrant.configure("2") do |config|

    # clusterConfigure = Cluster.new
    conf = Cluster.getConfiguration("kafka")

    script = <<-SCRIPT
    source /vagrant/software/jdk/init.sh
    source /vagrant/software/ssh/init.sh
    source /vagrant/software/kafka/init.sh
    source /vagrant/software/schema-registry/init.sh
    SCRIPT

    (conf.vmCounts.downto(1)).each do |i|
        config.vm.define "#{conf.vagrantTipPrefix}#{i}" do |node|
            node.vm.box = "ubuntu/bionic"
            node.vm.hostname="#{conf.hostnamePrefix}#{i}"
            node.vm.network "private_network", ip: "#{conf.ipPrefix}.#{conf.ipStart + i}"
      

            # 执行执行，需要绕开两个provisoin间，环境变量不可见问题
            node.vm.provision "shell", privileged: false, inline: script
            node.vm.provision "shell", privileged: false, inline: "echo '#{Cluster.getHosts(conf.hostnamePrefix, i)}' | sudo tee /etc/hosts"

            node.vm.provision "shell", privileged: false, inline: "sed -i \"s#brokerIdPlaceholder##{i}#g\" ~/software/kafka/config/server.properties"
            node.vm.provision "shell", privileged: false, inline: "sed -i \"s#logDirsPlaceholder#/home/vagrant/data/kafka#g\" ~/software/kafka/config/server.properties"
            node.vm.provision "shell", privileged: false, inline: "sed -i \"s#zookeeperConnectPlaceholder##{Cluster.getZookeeperIpAndPorts().join(",")}#g\" ~/software/kafka/config/server.properties"
            node.vm.provision "shell", privileged: false, inline: "kafka-server-start.sh -daemon ~/software/kafka/config/server.properties"
            
            
            node.vm.provision "shell", privileged: false, inline: "sed -i \"s#kafkastoreConnectionUrlPlaceholder##{Cluster.getZookeeperIpAndPorts().join(",")}#g\" ~/software/schema-registry/config/schema-registry.properties"
            node.vm.provision "shell", privileged: false, inline: "cd ~/software/schema-registry && bin/schema-registry-start -daemon config/schema-registry.properties"

            
            # 设置同步目录
            node.vm.synced_folder ".", "/vagrant"
 
            # VirtaulBox相关配置
            node.vm.provider "virtualbox" do |v|
                v.name = "#{conf.hostnamePrefix}#{i}"
                v.memory = conf.memorySize
                v.cpus = 1
            end
        end
    end
end